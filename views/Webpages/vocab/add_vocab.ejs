<%- include('../partial/html_header') %>
<title>VocabiX - Add Vocab</title>
<link rel="stylesheet" href="/home_page.css">
<link rel="stylesheet" href="/nav_bar.css">

<style>
.vocab-container {
  padding: 2rem;
  font-family: 'Poppins', sans-serif;
  max-width: 800px;
  margin: 0 auto;
}

.vocab-container h1 {
  color: var(--color-primary);
  margin-bottom: 1.5rem;
}

.vocab-row {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
  flex-wrap: wrap;
  align-items: center;
  background: var(--color-white);
  border: 1px solid var(--color-gray-300);
  border-radius: 10px;
  padding: 1rem;
  box-shadow: 0 2px 6px rgba(0,0,0,0.05);
}

.vocab-row input {
  flex: 1 1 180px;
  padding: 0.6rem 1rem;
  border-radius: 8px;
  border: 1px solid var(--color-gray-400);
  font-size: 1rem;
}

.delete-btn {
  background-color: #ff4d4d;
  color: white;
  border: none;
  border-radius: 8px;
  padding: 0.5rem 0.8rem;
  cursor: pointer;
  font-size: 0.9rem;
  transition: all 0.3s ease;
}

.delete-btn:hover {
  background-color: #e60000;
}

button {
  padding: 0.6rem 1.2rem;
  border-radius: 8px;
  border: none;
  cursor: pointer;
  font-weight: 600;
  margin-top: 1rem;
  font-size: 1rem;
}

#addMoreBtn {
  background-color: var(--color-cyan);
  color: white;
  margin-right: 1rem;
}

#submitBtn {
  background-color: var(--color-primary);
  color: white;
}

@media (max-width: 768px) {
  .delete-btn {
    align-self: flex-end;
  }
}
</style>
</head>
<body>
<div class="main-container">
    <%- include('../partial/nav_bar', { currentPage: 'vocabs' }) %>
    <main class="main-content">
        <%- include('../partial/header_nav_bar') %>

        <div class="vocab-container">
            <h1>Add Vocabulary</h1>

            <form id="vocabForm">
                <div id="vocabInputs">
                    <div class="vocab-row">
                        <input type="text" name="word[]" placeholder="Vocabulary" required />
                        <input type="text" name="meaning[]" placeholder="Meaning" required />
                        <input type="text" name="sentence[]" placeholder="Example Sentence" />
                        <button type="button" class="delete-btn">✖</button>
                    </div>
                </div>

                <button type="button" id="addMoreBtn">Add More</button>
                <button type="submit" id="submitBtn">Submit All</button>
            </form>
        </div>
    </main>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const addMoreBtn = document.getElementById('addMoreBtn');
  const vocabInputs = document.getElementById('vocabInputs');
  const vocabForm = document.getElementById('vocabForm');

  // Add new vocab row
  addMoreBtn.addEventListener('click', () => {
    const newRow = document.createElement('div');
    newRow.className = 'vocab-row';
    newRow.innerHTML = `
      <input type="text" name="word[]" placeholder="Vocabulary" required />
      <input type="text" name="meaning[]" placeholder="Meaning" required />
      <input type="text" name="sentence[]" placeholder="Example Sentence" />
      <button type="button" class="delete-btn">✖</button>
    `;
    vocabInputs.appendChild(newRow);
  });

  // Delete vocab row
  vocabInputs.addEventListener('click', (e) => {
    if (e.target.classList.contains('delete-btn')) {
      const rows = vocabInputs.querySelectorAll('.vocab-row');
      if (rows.length > 1) {
        e.target.parentElement.remove();
      } else {
        alert('At least one vocab is required!');
      }
    }
  });

  // Handle form submission
  vocabForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(vocabForm);
    const words = formData.getAll('word[]');
    const meanings = formData.getAll('meaning[]');
    const sentences = formData.getAll('sentence[]');

    const vocabData = words.map((word, index) => ({
      word,
      meaning: meanings[index],
      sentence: sentences[index]
    }));

    try {
      const res = await fetch('/add-word', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ vocab: vocabData })
      });

      const result = await res.json();

      if (res.ok) {
        alert('All vocabulary added successfully!');
        window.location.reload();
      } else {
        alert('Error: ' + result.message);
      }
    } catch (error) {
      alert('Error submitting vocab.');
      console.error(error);
    }
  });
});
</script>

<script src="/nav_bar.js"></script>
</body>
</html>
