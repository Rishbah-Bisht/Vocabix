<%- include('../partial/html_header') %>

  <title>VocabiX - Date wise idioms</title>
  <link rel="stylesheet" href="/home_page.css">
  <link rel="stylesheet" href="/nav_bar.css">
  </head>
  <style>
    .idioms-container {
      padding: 2rem;
      background-color: var(--color-gray-50);
      color: var(--color-gray-900);
      font-family: 'Poppins', sans-serif;
      min-height: 100vh;
    }

    .idioms-container h1 {
      font-size: 2rem;
      margin-bottom: 1.5rem;
      font-weight: 700;
      color: var(--color-primary);
      border-left: 5px solid var(--color-primary);
      padding-left: 0.8rem;
    }

    /* Heading */
    .page-title {
      font-size: 2rem;
      margin-bottom: 1.5rem;
      font-weight: 700;
      color: var(--color-primary);
      border-left: 5px solid var(--color-primary);
      padding-left: 0.8rem;
    }

    .letter-heading {
      font-size: 2rem;
      margin: 1rem 0;
    }

    /* Table Container */
    .table-responsive {
      width: 100%;
      overflow-x: auto;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
      background: var(--color-white);
    }

    /* Table Base */
    .words-table {
      width: 100%;
      border-collapse: collapse;
      min-width: 700px;
      font-size: 0.95rem;
    }

    /* Header Cells */
    .words-table th,
    .words-table td {
      padding: 0.9rem 1rem;
      text-align: left;
      border-bottom: 1px solid var(--color-gray-200);
    }

    /* Header Style */
    .words-table th {
      background: var(--color-primary);
      color: var(--color-white);
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    /* Table Body */
    .words-table td {
      color: var(--color-gray-800);
      vertical-align: top;
      cursor: pointer;
      line-height: 1.5;
      word-wrap: break-word;
    }

    /* Zebra striping */
    .words-table tr:nth-child(even) td {
      background-color: #e0e7ff;
    }

    /* Hover Effect */
    .words-table tr:hover td {
      background-color: rgb(177, 195, 255);
      transition: background 0.3s ease;
    }

    /* Empty Table State */
    .no-words {
      text-align: center;
      padding: 3rem 1rem;
      background-color: var(--color-white);
      border: 1px solid var(--color-gray-200);
      border-radius: 12px;
      box-shadow: 0 3px 15px rgba(0, 0, 0, 0.05);
    }

    .no-words i {
      font-size: 3rem;
      color: var(--color-secondary);
      margin-bottom: 1rem;
      display: block;
    }

    .no-words a {
      color: var(--color-primary);
      font-weight: 600;
      text-decoration: none;
    }

    .search-container {
      display: flex;
      gap: 0.5rem;
      margin-bottom: 2rem;
      flex-wrap: wrap;
    }

    .date-input {
      padding: 0.5rem 1rem;
      border: 1px solid var(--color-gray-300);
      border-radius: 8px;
      flex: 1 1 200px;
      font-size: 1rem;
    }

    .search-btn {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      background-color: var(--color-cyan);
      color: var(--color-white);
      padding: 0.5rem 1rem;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-weight: 600;
      transition: all 0.3s ease;
    }

    .search-btn:hover {
      opacity: 0.9;
      transform: translateY(-2px);
    }

    .no-words a:hover {
      text-decoration: underline;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .words-table thead {
        display: none;
      }

      .words-table tr {
        display: block;
        margin-bottom: 1rem;
        background: var(--color-white);
        border: 1px solid var(--color-gray-200);
        border-radius: 10px;
        padding: 0.75rem;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.04);
      }

      .words-table td {
        display: flex;
        flex-direction: column;
        padding: 0.5rem 0.8rem;
        text-align: left;
        border: none;
      }

      .words-table td::before {
        content: attr(data-label);
        font-weight: 600;
        color: var(--color-gray-700);
        margin-bottom: 0.3rem;
      }

      .page-title {
        font-size: 1.6rem;
      }
    }
  </style>

  <body>
    <!-- Mobile Menu Button -->


    <!-- Overlay -->
    <div class="overlay" id="overlay"></div>

    <!-- Main Container -->
    <div class="main-container">
      <%- include('../partial/nav_bar', { currentPage: 'Phrases' }) %>
        <!-- Main Content -->
        <main class="main-content">

          <%- include('../partial/header_nav_bar') %>
            <div class="idioms-container">
              <h1 class="page-title">Idioms by Date</h1>

              <div class="search-container">
                <input type="date" id="idiomDate" class="date-input">
                <button id="searchBtn" class="search-btn">Search</button>
              </div>

              <div id="resultsContainer"></div>
            </div>



        </main>
    </div>
<script>
async function getIdiomsByDate(date) {
  try {
    const res = await fetch(`/idioms-on-date?date=${encodeURIComponent(date)}`);
    if (!res.ok) throw new Error('Network response was not ok');

    const idioms = await res.json();
    const container = document.getElementById('resultsContainer');
    container.innerHTML = '';

    if (!Array.isArray(idioms) || idioms.length === 0) {
      container.innerHTML = `
        <div class="no-words">
          <i class="fas fa-book-open"></i>
          <p>No idioms found for selected date</p>
        </div>`;
      return;
    }

    // Create a single table for all idioms
    const tableWrapper = document.createElement('div');
    tableWrapper.className = 'table-responsive';

    const table = document.createElement('table');
    table.className = 'words-table';
    table.innerHTML = `
      <thead>
        <tr>
          <th>Idiom</th>
          <th>Meaning</th>
          <th>Example</th>
        </tr>
      </thead>
      <tbody>
        ${idioms.map(i => `
          <tr>
            <td data-label="Idiom">${i.idiom}</td>
            <td data-label="Meaning">${i.meaning}</td>
            <td data-label="Example">${i.example || '-'}</td>
          </tr>`).join('')}
      </tbody>
    `;

    tableWrapper.appendChild(table);
    container.appendChild(tableWrapper);

  } catch (error) {
    console.error(error);
    document.getElementById('resultsContainer').innerHTML = `
      <div class="no-words">
        <i class="fas fa-exclamation-triangle"></i>
        <p>Error loading idioms. Please try again.</p>
      </div>`;
  }
}

// Search button event
document.getElementById('searchBtn').addEventListener('click', () => {
  const date = document.getElementById('idiomDate').value;
  if (!date) return alert('Please select a date');
  getIdiomsByDate(date);
});

// Set today's date on load and fetch idioms
document.addEventListener('DOMContentLoaded', () => {
  const today = new Date().toISOString().split('T')[0];
  document.getElementById('idiomDate').value = today;
  getIdiomsByDate(today);
});
</script>




  </body>

  </html>